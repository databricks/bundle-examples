# {{.project_name}}

The '{{.project_name}}' project was generated by using the scala-job template.

## Getting started

1. Install the Databricks CLI from https://docs.databricks.com/dev-tools/cli/install.html. The version must be v0.226.0 or later.

2. Authenticate to your Databricks workspace (if you have not done so already):
    ```
    $ databricks configure
    ```

3. To deploy a development copy of this project, type:
    ```
    $ databricks bundle deploy --target dev
    ```
    (Note that "dev" is the default target, so the `--target` parameter
    is optional here.)

    This deploys everything that's defined for this project.
    For example, the default template would deploy a job called
    `[dev yourname] {{.project_name}}_job` to your workspace.
    You can find that job by opening your workspace and clicking on **Workflows**.

4. Similarly, to deploy a production copy, type:
   ```
   $ databricks bundle deploy --target prod
   ```

5. To run a job, use the "run" command:
   ```
   $ databricks bundle run
   ```

6. Optionally, install developer tools such as the Databricks extension for Visual Studio Code from
   https://docs.databricks.com/dev-tools/vscode-ext.html.

7. For documentation on the Databricks Asset Bundles format used
   for this project, and for CI/CD configuration, see
   https://docs.databricks.com/dev-tools/bundles/index.html.

## Local Devloop

### Prerequisites

Install the following tools:
- [sbt](https://www.scala-sbt.org/) v1.10.2 or later
- Java 17

### Running via sbt

1. On the terminal, navigate to the project's root directory. This is the directory where the `build.sbt` file is located.
2. Execute the project's default `Main` class by running `sbt run`.

### IntelliJ setup

Install the latest [IntelliJ IDEA](https://www.jetbrains.com/idea/) IDE, both Community and Professional Editions work.
Install the [Scala plugin](https://plugins.jetbrains.com/plugin/1347-scala) from the Jetbrains marketplace.

1. Import the current directory in your in IntelliJ where `build.sbt` is located.
2. Choose the correct Java version in IntelliJ, go to File -> Project Structure -> SDKs.

   Then Run -> Edit Configurations -> Set version to Java 17 from drop
3. You should now be able to run the code directly in the IDE via the ▶️ option.

## Customizations

### Job configuration
The bundles piggybacks off the same configurations used in APIs. If you want to use an existing cluster instead of spinning one up everytime, replace job_cluster_key in tasks with existing_cluster_id: <your_cluster_id>

You can also change to an all-purpose (dedicated) cluster by removing the data_security_mode of the created cluster

